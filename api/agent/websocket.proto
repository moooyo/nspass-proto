syntax = "proto3";

package nspass.api.agent.v1;

option go_package = "github.com/moooyo/nspass-proto/generated/api/agent;agent";

import "google/api/annotations.proto";

service AgentWebSocketService {
  // 建立WebSocket连接
  // 
  // 此端点提供WebSocket连接建立的HTTP升级入口。
  // 实际的WebSocket通信使用Protocol Buffers二进制格式，
  // 所有消息都基于WebSocketMessage结构，使用correlation_id进行业务关联。
  // 
  // WebSocket连接建立后，任务发送和ACK响应都通过WebSocket进行，
  // 而不是通过下面的HTTP API端点。
  rpc Connect(ConnectRequest) returns (ConnectResponse) {
    option (google.api.http) = {
      get: "/v1/agent/{agent_id}/websocket"
    };
  };
}

message ConnectRequest {
  string agent_id = 1;
}

message ConnectResponse {

}

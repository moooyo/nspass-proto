syntax = "proto3";

package nspass.api.routes.v1;

option go_package = "github.com/moooyo/nspass-proto/generated/api/routes;nspassroutes";

import "google/api/annotations.proto";
import "common.proto";
import "model/route.proto";

// 获取线路请求
message GetRouteRequest {
  int32 id = 1; // 数据库自增主键ID
}

// 获取线路响应
message GetRouteResponse {
  nspass.common.v1.ApiResponseStatus status = 1;
  optional nspass.model.v1.Route data = 2;
}

// 列出线路请求
message ListRoutesRequest {
  nspass.common.v1.PaginationRequest pagination = 1;
  repeated nspass.common.v1.FilterParam filters = 2;   // 过滤条件
  repeated nspass.common.v1.SortParam sorts = 3;       // 排序条件
  optional nspass.model.v1.RouteType type = 4;         // 按类型过滤
  optional nspass.model.v1.RouteStatus status = 5;     // 按状态过滤
  optional nspass.model.v1.Protocol protocol = 6;      // 按协议过滤
}

// 列出线路响应
message ListRoutesResponse {
  nspass.common.v1.ApiResponseStatus status = 1;
  repeated nspass.model.v1.Route data = 2;
  optional nspass.common.v1.PaginationResponse pagination = 3;
}

// 搜索线路请求
message SearchRoutesRequest {
  string query = 1;                                    // 搜索关键词
  repeated string fields = 2;                          // 搜索字段 (route_name, entry_point等)
  nspass.common.v1.PaginationRequest pagination = 3;
  optional nspass.model.v1.RouteType type = 4;
}

// 搜索线路响应
message SearchRoutesResponse {
  nspass.common.v1.ApiResponseStatus status = 1;
  repeated nspass.model.v1.Route data = 2;
  optional nspass.common.v1.PaginationResponse pagination = 3;
}

// 线路管理服务（只读操作，动态生成）
service RouteManagementService {
  // 获取线路
  rpc GetRoute(GetRouteRequest) returns (GetRouteResponse) {
    option (google.api.http) = {
      get: "/v1/routes/{id}"
    };
  }
  
  // 列出线路（动态生成）
  rpc ListRoutes(ListRoutesRequest) returns (ListRoutesResponse) {
    option (google.api.http) = {
      get: "/v1/routes"
    };
  }
  
  // 搜索线路（动态生成）
  rpc SearchRoutes(SearchRoutesRequest) returns (SearchRoutesResponse) {
    option (google.api.http) = {
      get: "/v1/routes/search"
    };
  }
}
